apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarqube
  name: sonarqube
  namespace: user15-sonarqube
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: sonarqube
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        tuned.openshift.io/elasticsearch: "true"
      labels:
        deployment: sonarqube
    spec:
      containers:
      - image: quay.io/gpte-devops-automation/sonarqube:7.9.1
        livenessProbe:
          httpGet:
            path: /sessions/new
            port: 9000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /sessions/new
            port: 9000
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 6
        resources:
          requests:
            memory: "2Gi"
            cpu: 1
          limits:
            memory: "3Gi"
            cpu: 2
        env:
          - name: SONARQUBE_JDBC_USERNAME
            value: sonar
          - name: SONARQUBE_JDBC_PASSWORD
            value: sonar1234
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://postgresql/sonardb
        imagePullPolicy: IfNotPresent
        name: sonarqube
        ports:
        - containerPort: 9000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/sonarqube/data
          name: sonarqube-volume-1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: sonarqube-volume-1
          persistentVolumeClaim:
            claimName: sonarqube-volume-1
